(function() {var implementors = {};
implementors["hubcaps"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.57/serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"hubcaps/errors/enum.Error.html\" title=\"enum hubcaps::errors::Error\">Error</a>","synthetic":false,"types":["hubcaps::errors::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.10.7/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"hubcaps/errors/enum.Error.html\" title=\"enum hubcaps::errors::Error\">Error</a>","synthetic":false,"types":["hubcaps::errors::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/url/2.1.1/url/parser/enum.ParseError.html\" title=\"enum url::parser::ParseError\">ParseError</a>&gt; for <a class=\"enum\" href=\"hubcaps/errors/enum.Error.html\" title=\"enum hubcaps::errors::Error\">Error</a>","synthetic":false,"types":["hubcaps::errors::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"hubcaps/errors/enum.Error.html\" title=\"enum hubcaps::errors::Error\">Error</a>","synthetic":false,"types":["hubcaps::errors::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"hubcaps/errors/enum.Error.html\" title=\"enum hubcaps::errors::Error\">Error</a>","synthetic":false,"types":["hubcaps::errors::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"hubcaps/enum.MediaType.html\" title=\"enum hubcaps::MediaType\">MediaType</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/mime/0.3.16/mime/struct.Mime.html\" title=\"struct mime::Mime\">Mime</a>","synthetic":false,"types":["mime::Mime"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()